<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Angular on Christodoulos Fragkoudakis</title><link>http://fragkoudakis.gr/tags/angular/</link><description>Recent content in Angular on Christodoulos Fragkoudakis</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 26 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://fragkoudakis.gr/tags/angular/index.xml" rel="self" type="application/rss+xml"/><item><title>Random Angular Tips</title><link>http://fragkoudakis.gr/posts/angular/angular-tips/</link><pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate><guid>http://fragkoudakis.gr/posts/angular/angular-tips/</guid><description>How to chain observables # If observable2 depends on a finished observable1 you can utilize mergeMap from rxjs:
class SomeClass { ... onCredentials(credentials: Credentials) { this.auth .getSubjectToken(credentials) .pipe( map((res) =&amp;gt; res.headers.get(&amp;#39;X-Subject-Token&amp;#39;) ?? &amp;#39;&amp;#39;), tap((subjectToken) =&amp;gt; { localStorage.setItem(&amp;#39;X-Subject-Token&amp;#39;, subjectToken); }), mergeMap((subjectToken) =&amp;gt; { return this.auth.getAuthorizedApplications(subjectToken); }) ) .subscribe((res) =&amp;gt; console.log(res)); } ... }</description></item></channel></rss>